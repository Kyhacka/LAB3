open System

// Функция для ввода строк до достижения заданного количества
let inputStrings (count: int) =
    // Используем список для накопления строк
    [
        for i in 1 .. count do
            printfn "Введите строку (осталось ввести %d строк):" (count - i + 1)
            yield Console.ReadLine() // Возвращаем строку, даже если она пустая
    ]

// Функция для проверки, содержится ли цифра в строке
let containsDigit digit (str: string) =
    str.Contains(digit.ToString())

// Функция для ввода числа с проверкой корректности
let rec inputNumber prompt validate =
    printfn "%s" prompt
    match Int32.TryParse(Console.ReadLine()) with
    | true, value when validate value -> value
    | _ -> 
        printfn "Некорректный ввод. Пожалуйста, попробуйте снова."
        inputNumber prompt validate

// Основная программа
let main () =
    // Ввод заданной цифры
    let targetDigit = 
        inputNumber 
            "Введите цифру для поиска (от 0 до 9):" 
            (fun x -> x >= 0 && x <= 9)

    // Ввод количества строк
    let count = 
        inputNumber 
            "Введите количество строк (положительное число):" 
            (fun x -> x > 0)

    // Ввод строк
    let strings = inputStrings count

    // Используем Seq.fold для накопления суммы длин строк, содержащих заданную цифру
    let sum = 
        strings 
        |> Seq.fold (fun acc str ->
            if containsDigit targetDigit str then
                acc + str.Length // Добавляем длину строки к сумме, если цифра найдена
            else
                acc // Иначе оставляем сумму без изменений
        ) 0 // Начальное значение аккумулятора — 0

    // Выводим результат
    printfn "Исходные строки: %A" strings
    printfn "Сумма длин строк, содержащих цифру %d: %d" targetDigit sum

// Запуск программы
main()
